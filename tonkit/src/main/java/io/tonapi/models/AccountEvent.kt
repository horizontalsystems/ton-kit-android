/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package io.tonapi.models

import io.tonapi.models.AccountAddress
import io.tonapi.models.Action

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * An event is built on top of a trace which is a series of transactions caused by one inbound message. TonAPI looks for known patterns inside the trace and splits the trace into actions, where a single action represents a meaningful high-level operation like a Jetton Transfer or an NFT Purchase. Actions are expected to be shown to users. It is advised not to build any logic on top of actions because actions can be changed at any time.
 *
 * @param eventId 
 * @param account 
 * @param timestamp 
 * @param actions 
 * @param isScam scam
 * @param lt 
 * @param inProgress Event is not finished yet. Transactions still happening
 * @param extra TODO
 */


data class AccountEvent (

    @Json(name = "event_id")
    val eventId: kotlin.String,

    @Json(name = "account")
    val account: AccountAddress,

    @Json(name = "timestamp")
    val timestamp: kotlin.Long,

    @Json(name = "actions")
    val actions: kotlin.collections.List<Action>,

    /* scam */
    @Json(name = "is_scam")
    val isScam: kotlin.Boolean,

    @Json(name = "lt")
    val lt: kotlin.Long,

    /* Event is not finished yet. Transactions still happening */
    @Json(name = "in_progress")
    val inProgress: kotlin.Boolean,

    /* TODO */
    @Json(name = "extra")
    val extra: kotlin.Long

) {


}

